<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAACAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAFAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAPAAAAPwAAAEAAAAAuAAAAHwAAABMAAAALAAAAJAAAAF8AAABYAAAAQQAAAC0AAAAcAAAADwAA
        AAcAAAAFAAAAEgAAABYAAAANAAAABgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOvr6464uLjNenp6wGtra7BJSUmZFhYWfgACAmocdnLpHG9s6xhdWt0QPz3DDzQ0rwoo
        J5cAAAB1AAAAXiQkJFs+QD6LGBwakwAAAHkAAABfAAAASQAAADcAAAAmAAAAGQAAAA8AAAAIAAAABAAA
        AAEAAAAAAAAAAAAAAAAAAAAA/Pz81f/////////////////////+/v7+5ebm9azDwv5MgHz/J2hk/yNr
        Zf8icW3/J4+N/zKop/sskpLtNHh45Wd9e/9hfHf+kJSS/LCvru2hoaHXTUlBtSspKKAkJCKPExMTegAA
        AGIAAABNAAAAKQAAAAQAAAAAAAAAAAAAAAL+/v7u//////////////////////////////////////7+
        /v/7/Pz/8/b2/8nZ2P8ih4L/NKyq/zatrP82raz/Nqyr/zaqqv9Snpz/zs3M//Lx7v/MxrL+2tfP/O/s
        4/vw8PD35OTk78rKyuAkJCRwAAAADAAAAAAAAAAArq6uFv////z/////////////////////////////
        ////////7+/v////////////gaak/yaPjP80rKv/Nq2t/zatrP82raz/Nq2s/2eXlv/Y1tb/9vLr/9LO
        vv/Avbb/ube1/8XExP/Ly8r/7u7u9hQUFGUAAAAIAAAAAAAAAADw8PBl////////////////////////
        //////////////Pz8//s7Oz///////7+/v8vcGz/OJua/062tv85ra3/Nqys/zasq/82raz/h5ST/9HR
        0//48+X/+vXq//v47//59/X/8vLy/+fn5//t7e3xBwcHTAAAAAQAAAAAAAAAAPn5+ab/////6urq////
        /////////////////////////f39//Hx8f//////+/z8/y53cv8uoJ//P7Cw/063tv86rq7/Nqys/zmn
        p/+hnpz/39/g//jx3f/8+fP//Pnw//39+////////////+7u7u4AAAA4AAAAAgAAAAAAAAAA/f391f39
        /f/a2tr///////////////////////////+8u7z/8/Pz///////3+fn/L396/zCmpP82r67/Nq2t/zat
        rf82raz/QKSi/7OxsP/s7Oz/9u7W//z69f/8+fD//f38////////////paWlyQAAACcAAAAAAAAAAOjo
        6Av9/f3q7ezs/9zc2//+/v7//////////////////////5WSlf///////////9/o6P8vcXP/NKem/zas
        q/82raz/Nq2s/zatrP9Ln53/xcPC/9XX2f/q5NL//Pnx//z58f/+/v7///////////9AQECcAAAAGQAA
        AAAAAAAA8/PzFf7+/vPy8vH/3t3d///////////////////////+/v7/+fn5////////////2Nnd/ycz
        Tf80bX7/UJ+m/zatrP82rKv/Nqyr/1idm//U0tH/+fj0//fy3//8+fD//Pnx//7+/v///////////xUV
        FYMAAAAPAAAAAAAAAADS0tIi////++3t7f/S0ND//////////////////v7+/5GQkf/7+/v/////////
        //+2ucD/KjdT/0BMaf89SWf/OJ+m/zigpv83o6f/V5OM/+Hg3//z7t7/+fTl//z58P/9+/f/////////
        ///9/f38AAAAaAAAAAcAAAAA////Aufn51T/////ycnJ//Dw8P//////////////////////zMzN//7+
        /v///////v7+/2ZocP+Mkp//YmuD/0dSb/9JU33/SFJ9/0ZTff9bh37/29zd//Pq0P/69+z//Pnw//79
        +v///////////9TU1OUAAABTAAAAAwAAAADj4+MJ9fX1m//////NzMz/+Pf3//////////////////z8
        /P/q6ur////////////8/Pz/LDZJ/09acv9HU2//R1Nz/2RskP9IUn3/Q1J4/4egl//p6Oj/9OvQ//v5
        8f/8+fD//v7+////////////yMjI2QAAAD8AAAABAAAAAN3d3Q/6+vrZ/////+Li4f//////////////
        ////////7u3u//39/f////////////P19f8gMEb/Slhx/zlGZP9LZ4H/QWqJ/0VYgP9QXHn/sauT/+fd
        uv/t6d3//Pnw//z58v/////////////////ExMTOAAAALAAAAAAAAAAA3d3dHv//////////////////
        //////////////T09P+trar//f7+////////////wNPR/zuFg/80qqn/Nq6t/zaurf82ra3/Nq2s/1ON
        df+olU7/yLJg/+HToP/8+fD//Pr0/////////////////5aWlrIAAAAcAAAAAAAAAADu7u5M////////
        ///////////////////6+vr/hIWE/8DBw//+/v7///////////+jwL//KYiG/zWpqP82q6r/Nq2s/zat
        rf82raz/Wnpd/6GQUf+jlFn/z759//z58P/8+vX/////////////////RkZGiwAAABAAAAAAAAAAAPX1
        9X7/////////////////////8fHx/0BAQP+CgoP/39/f//7+/v///////////5y9vP8plJL/Nayr/zas
        rP82rKz/Nqyr/zatrP9yh27/o5JU/7upYP/g2cD/+fbu//38+v////////////////8ZGRlwAAAACAAA
        AAAAAAAA/Pz8r/////////////////T09P9eXVz/ExQT/9fW1v/Cw8b//v7+////////////ap6b/y2d
        nP81rKz/Nq2t/zatrP82raz/Nq2s/5CYlf/FuIn/29Co/+nn4P/8+fD//f38////////////9/f3+AAA
        AFgAAAACAAAAAAAAAAD9/f14/f39f/z8/L3////glZWU7RAQEPe6urr98O3s/8THzP////////////7+
        /v4VZ2L3LqGg/TWqqv82rKz/Nq2t/zatrP86q6r+ure2/vPw5f/59ej//Pnw//z58P/+/v7/////////
        //+4uLjYAAAARQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wM3NzcOFhYWF+Pj4yXGxslx4uTltP7+
        /u7////+/v7++gQpJT4imJElL6qqbDOpqbU1q6vwNqys/zKensafn59Y9O7eivr27sf8+e/3/Pnz////
        /////////////7GxsbIAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf39/Ara2
        2wfr6+sN9PT0F/f390Pv7+9SAAAABQAAAAEktrYHJ52dDSednRoxq6tJKpKSKn9/fwb/48YJ///tDu7u
        3R74+PRI/f39eP39/a39/f3Lra2tSAAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////////////////////////+DA5//gAAAf4AAAA+AA
        AAPgAAADwAAAA8AAAAPAAAADwAAAA8AAAAfAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAA8AAAAPwAAAD/8O
        EA////+f//////////////////////////8=
</value>
  </data>
</root>